{
  "swagger": "2.0",
  "info": {
    "description": "Try out the order management api on this site.",
    "version": "1.0.0",
    "title": "Order Management"
  },
  "host": "orderservice.biz.tm:3000",
  "basePath": "/v1/",
  "tags": [
    {
      "name": "carts",
      "description": "All carts"
    },
    {
      "name": "orders",
      "description": "All orders"
    },
    {
      "name": "users",
      "description": "Users Orders"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/carts": {
      "get": {
        "tags": [
          "carts"
        ],
        "summary": "Get all carts",
        "description": "Returns all carts",
        "operationId": "getCart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/carts/{userid}": {
      "get": {
        "tags": [
          "carts"
        ],
        "summary": "Get a specific cart",
        "description": "Get current cart of a specific user",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of user that cart needs to be returned",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": [
          "carts"
        ],
        "summary": "Updated cart",
        "description": "Updated current cart. Removed it's carts content or added content.",
        "operationId": "updateCart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "id of user that is needed to update its cart",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "content",
            "description": "Updated content objects",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Carts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "tags": [
          "carts"
        ],
        "summary": "Create new cart",
        "description": "Creates cart for a new or specific user",
        "operationId": "postCart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of user that is needed to create its cart",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Carts that needs to be created for a specific user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Carts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "carts"
        ],
        "summary": "Empty cart",
        "description": "Delete current content in cart.",
        "operationId": "deleteCart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "Id of user that is needed to delete its cart",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "content",
            "description": "Delete content objects",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Carts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get all orders",
        "description": "Returns all orders",
        "operationId": "getOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create new order",
        "description": "Creates a new order",
        "operationId": "postOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Order that needs to be created",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userid": {
                  "type": "string"
                },
                "orderstatus": {
                  "type": "string",
                  "enum": [
                    "in Bearbeitung",
                    "Versendet",
                    "Zugestellt",
                    "Abgesagt",
                    "Zurückgesendet"
                  ]
                },
                "content": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productid": {
                        "type": "integer"
                      },
                      "productquantity": {
                        "type": "integer"
                      },
                      "productprice": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/orders/{orderid}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get a specific order",
        "description": "Get a specific order",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "description": "id of order to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "Deletes order",
        "description": "Delete order if it is canceled",
        "operationId": "deleteOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "description": "id of order to delete",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Order that needs to be deleted",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "orderstatus": {
                  "type": "string",
                  "enum": [
                    "in Bearbeitung"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/orders/{orderid}/orderstatus": {
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Update orders status",
        "description": "Update only orders status",
        "operationId": "updateOrderStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "description": "orderstatus to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "orderstatus",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "in Bearbeitung",
                "Versendet",
                "Zugestellt",
                "Abgesagt",
                "Zurückgesendet"
              ],
              "example": "{\"orderstatus\": \"in Bearbeitung\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/users/{userid}/orders": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get all orders for specific user",
        "description": "Get all Orders of a specific user",
        "operationId": "getOrdersOfUser",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "id of user to return his orders",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Carts": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productid": {
                "type": "integer"
              },
              "productquantity": {
                "type": "integer"
              }
            }
          }
        }
      },
      "required": [
        "userid",
        "content"
      ],
      "xml": {
        "name": "Cart"
      }
    },
    "Orders": {
      "type": "object",
      "properties": {
        "orderid": {
          "type": "string"
        },
        "userid": {
          "type": "string"
        },
        "orderstatus": {
          "type": "string",
          "enum": [
            "in Bearbeitung",
            "Versendet",
            "Zugestellt",
            "Abgesagt",
            "Zurückgesendet"
          ]
        },
        "orderdate": {
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productid": {
                "type": "integer"
              },
              "productquantity": {
                "type": "integer"
              },
              "productprice": {
                "type": "number"
              }
            }
          }
        }
      },
      "required": [
        "userid",
        "content"
      ],
      "xml": {
        "name": "Orders"
      }
    }
  },
  "externalDocs": {
    "description": "GitHub Repository of API",
    "url": "https://github.com/THB-Team8/Order-Management-API"
  }
}
